/**********************************************************************************************************************
 * \file App_Config.h
 * \copyright Copyright (C) Infineon Technologies AG 2023
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef APP_CONFIG_H_
#define APP_CONFIG_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxPort_PinMap.h"
#include "Port/Io/IfxPort_Io.h"

#include <stdio.h>
#include <stdbool.h>
#include <stdint.h>
#include <string.h>

/*********************************************************************************************************************/
/*--------------------------------------------- Generic System Setup -----------------------------------------------*/
/*********************************************************************************************************************/

/* Hardware Pin Definitions */
#define BUTTON_0                IfxPort_P00_7       /* Port/Pin for BUTTON 0 - Monitored by CPU0                    */
#define LED_1                   IfxPort_P00_5       /* Port/Pin for LED 1 - Controlled by CPU1                      */
#define LED_2                   IfxPort_P00_6       /* Port/Pin for LED 2 - Controlled by CPU2                      */

/* System-wide Configuration */
#define BUTTON_DEBOUNCE_COUNT   (5)                /* Number of consecutive readings for debouncing                */

/* System-wide Boolean Flags */
extern volatile bool BUTTON_PRESSED_FLAG;

/* CPU1/CPU2 Looping Counters */
extern volatile uint32_t cpu1_loop_count;
extern volatile uint32_t cpu2_loop_count;
extern volatile uint32_t led_process_count;

/* Inter-CPU Communication Flags */
extern volatile bool LED_PROCESS_ACTIVE;
extern volatile bool CPU1_EXECUTION_PROCESS;
extern volatile bool CPU2_EXECUTION_PROCESS;
extern volatile bool CPU1_DATA_READY;
extern volatile bool CPU2_DATA_READY;


/*********************************************************************************************************************/
/*------------------------------------------------- CPU0 Section ---------------------------------------------------*/
/*********************************************************************************************************************/
/* CPU0 uses FreeRTOS */
#include "FreeRTOS.h"
#include "semphr.h"

/* CPU0 Application Functions */
void app_cpu0_led1(void);
void app_cpu0_button(void);

/* CPU0 Task Functions */
void task_cpu0_init(void *arg);                    /* CPU0 initialization task running at 1ms                     */
void task_cpu0_1ms(void *arg);                     /* CPU0 1ms placeholder task                                    */
void task_cpu0_10ms(void *arg);                    /* CPU0 10ms placeholder task                                   */
void task_cpu0_100ms(void *arg);                   /* CPU0 100ms placeholder task                                  */
void task_cpu0_1000ms(void *arg);                  /* CPU0 1000ms placeholder task                                 */


/* CPU0 Configuration */
#define CPU0_INIT_TASK_PRIORITY     (2)            /* Priority for CPU0 init task                                  */
#define CPU0_INIT_TASK_STACK        (configMINIMAL_STACK_SIZE)  /* Stack size for CPU0 init task            */
#define CPU0_1MS_TASK_PRIORITY      (3)            /* Priority for CPU0 1ms task                                   */
#define CPU0_1MS_TASK_STACK         (configMINIMAL_STACK_SIZE)  /* Stack size for CPU0 1ms task             */
#define CPU0_10MS_TASK_PRIORITY     (4)            /* Priority for CPU0 10ms task                                  */
#define CPU0_10MS_TASK_STACK        (configMINIMAL_STACK_SIZE)  /* Stack size for CPU0 10ms task            */
#define CPU0_100MS_TASK_PRIORITY    (5)            /* Priority for CPU0 100ms task                                 */
#define CPU0_100MS_TASK_STACK       (configMINIMAL_STACK_SIZE)  /* Stack size for CPU0 100ms task           */
#define CPU0_1000MS_TASK_PRIORITY   (6)            /* Priority for CPU0 1000ms task                                */
#define CPU0_1000MS_TASK_STACK      (configMINIMAL_STACK_SIZE)  /* Stack size for CPU0 1000ms task          */

/*********************************************************************************************************************/
/*---------------------------------------------- CPU1/CPU2 Section -----------------------------------------------*/
/*********************************************************************************************************************/
/* CPU1 and CPU2 run bare-metal with LED2 control functions */
void app_cpu1_led2on(void);
void app_cpu2_led2off(void);

#endif /* APP_CONFIG_H_ */
